{"version":3,"sources":["webpack:///webpack/bootstrap feea3370ce0b62e9c87b","webpack:///./src/js/audibly.js","webpack:///./src/js/modules/Audibly/Context.js","webpack:///./src/js/modules/Exception.js","webpack:///./src/js/modules/Downloader.js","webpack:///./src/js/modules/Audibly/Source.js"],"names":["window","Audibly","options","context","buffers","sources","Object","assign","audio","callback","length","bind","id","AudiblyContext","AudioContext","webkitAudioContext","Exception","type","message","toString","Downloader","audibly","completeCB","count","complete","i","request","XMLHttpRequest","open","url","e","responseType","onload","decodeAudioData","response","success","error","onerror","send","buffer","AudiblySource","createGain","createGainNode","node","createBufferSource","playbackRate","value","connect","destination","loop"],"mappings":"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","file":"audibly.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap feea3370ce0b62e9c87b","/**\n * audibly.js\n * @author Craig Harvie <craig@craigharvie.me>\n */\n\n\nimport AudiblyContext from 'modules/Audibly/Context';\nimport Downloader from 'modules/Downloader';\n\n\nwindow.Audibly = class Audibly {\n\n\n\t/**\n   * Create a audibly instance.\n   * @param {array} audio - array of audio objects ({id: 1, url: 'http://audio.com/2.wav'}).\n   */\n\tconstructor( options={} ) {\n\n\t\t// Setup variables\n\t\tthis.options = options;\n\t\tthis.context = new AudiblyContext();\n\t\tthis.buffers = {};\n\t\tthis.sources = {};\n\n\t\t// Process options\n\t\tthis.options = Object.assign( {\n\t\t\taudio: [],\n\t\t\tcallback: () => {}\n\t\t}, options );\n\n\t\t// Download any audio we have\n\t\tif ( this.options.audio.length ) {\n\t\t\tnew Downloader( this, this.options.callback.bind( this ) );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\n\t/**\n   * Gets a source node\n   * @param {string} id\n   */\n\tgetSourceNode( id ) {\n\t\treturn this.sources[ id ];\n\t}\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/audibly.js","/**\n * Class representing an AudiblyContext\n * Wrapper for AudioContext - https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\n * @author Craig Harvie <craig@craigharvie.me>\n *\n * @description\n * The AudioContext interface represents an audio-processing graph built\n * from audio modules linked together, each represented by an AudioNode.\n * An audio context controls the creation of the nodes it contains and the\n * execution of the audio processing, or decoding.\n * You need to create an AudioContext before you do anything else,\n * as everything happens inside a context.\n */\n\nimport Exception from '../Exception';\n\nexport default class AudiblyContext {\n\n\n\t/**\n   * Create an AudiblyContext.\n   */\n\tconstructor() {\n\n\t\t// Create AudioContext\n\t\tlet AudioContext = window.AudioContext || window.webkitAudioContext;\n\t\tif ( AudioContext ) {\n\t\t\tthis.context = new AudioContext();\n\t\t} else {\n\t\t\tthrow new Exception( 'AudiblyContextException', 'Unable to create Web Audio API AudioContext. This may be down to an out of date browser.' );\n\t\t}\n\n\t\treturn this.context;\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/Audibly/Context.js","/**\n * Class representing an Exception\n * @author Craig Harvie <craig@craigharvie.me>\n */\nexport default class Exception {\n\n\n\t/**\n   * Create an Exception.\n   */\n\tconstructor( type, message ) {\n\t\tthis.type = type;\n\t\tthis.message = message;\n\t\tthis.toString = function() {\n\t\t\treturn `${this.type}: ${this.message}`;\n\t\t};\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/Exception.js","/**\n * Class representing a Downloader\n * Download raw audio files\n * @author Craig Harvie <craig@craigharvie.me>\n */\n\nimport AudiblySource from 'modules/Audibly/Source';\nimport Exception from 'modules/Exception';\n\nexport default class Downloader {\n\n\n\t/**\n   * Create a Downloader.\n   */\n\tconstructor( audibly, completeCB ) {\n\n\t\tthis.audibly = audibly;\n\t\t// Keep track of how many we have downloaded\n\t\tthis.count = 0;\n\t\tthis.complete = completeCB;\n\n\t\t// Loop through and download audio\n\t\tfor ( let i=0; i<this.audibly.options.audio.length; i++ ) {\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\ttry {\n\t\t\t\trequest.open( 'GET', this.audibly.options.audio[ i ].url, true );\n\t\t\t} catch ( e ) {\n\t\t\t\tthrow new Exception( 'AudiblyException', 'Please ensure you have provided a url for your audio' );\n\t\t\t}\n\n\t\t\t// We want raw data\n\t\t\trequest.responseType = 'arraybuffer';\n\n\t\t\trequest.onload = () => {\n\t\t\t\t// Asynchronously decode the audio file data in request.response\n\t\t\t\tthis.audibly.context.decodeAudioData( request.response, this.success.bind( this, this.audibly.options.audio[ i ].id ), this.error );\n\t\t\t};\n\n\t\t\trequest.onerror = () => {\n\t\t\t\tthrow new Exception( 'AudiblyException', 'Please ensure you have provided a url for your audio' );\n\t\t\t};\n\n\t\t\trequest.send();\n\n\t\t}\n\t}\n\n\n\t/**\n   * Download of audio was successfull\n   */\n\tsuccess( id, buffer ) {\n\t\tthis.audibly.buffers[ id ] = buffer;\n\t\tthis.audibly.sources[ id ] = new AudiblySource( this.audibly.context, buffer );\n\t\tif ( ++this.count === this.audibly.options.audio.length ) {\n\t\t\tthis.complete();\n\t\t}\n\t}\n\n\n\t/**\n   * Download of audio errored\n   */\n\terror() {\n\t\tthrow new Exception( 'AudiblyException', 'Download of audio errored. Please check your audio configuration' );\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/Downloader.js","/**\n * Class representing an AudiblySource\n * Wrapper for AudioBufferSourceNode - https://developer.mozilla.org/en-US/docs/Web/API/AudioBufferSourceNode\n * @author Craig Harvie <craig@craigharvie.me>\n *\n * @description\n * The AudioBufferSourceNode interface represents an audio source consisting\n * of in-memory audio data, stored in an AudioBuffer.\n * It is an AudioNode that acts as an audio source.\n */\n\nexport default class AudiblySource {\n\n\n\tconstructor( context, buffer ) {\n\n\t\t// Browser differences check\n\t\tif ( !context.createGain ) {\n\t\t\tcontext.createGain = context.createGainNode;\n\t\t}\n\n\t\t// Source node\n\t\tthis.node = context.createBufferSource();\n\t\tthis.node.playbackRate.value = 1;\n\t\tthis.node.buffer = buffer;\n\n\t\t// Connect the context destination node to the gain node\n\t\tthis.node.connect( context.destination );\n\n\t\tthis.node.loop = true;\n\n\t\treturn this;\n\t}\n\n\n\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/Audibly/Source.js"],"sourceRoot":""}