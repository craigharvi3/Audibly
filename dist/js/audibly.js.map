{"version":3,"sources":["webpack:///webpack/bootstrap 2a3ddc30c74cd4f8a3a5","webpack:///./src/js/audibly.js","webpack:///./src/js/API/Audibly/AudiblyContext.js","webpack:///./src/js/API/Exception.js","webpack:///./src/js/API/Downloader.js","webpack:///./src/js/API/Audibly/Node/AudiblyNode.js","webpack:///./src/js/API/Audibly/Node/Source/AudiblyAudioBufferSourceNode.js","webpack:///./src/js/API/Audibly/Node/Source/AudiblyOscillatorNode.js","webpack:///./src/js/API/Audibly/Node/Filter/AudiblyBiquadFilterNode.js","webpack:///./src/js/API/Audibly/Node/Filter/AudiblyConvolverNode.js"],"names":["window","AudiblyContext","AudiblyNode","AudiblyAudioBufferSourceNode","AudiblyOscillatorNode","AudiblyBiquadFilterNode","AudiblyConvolverNode","Audibly","options","buffers","Object","assign","audio","callback","length","bind","id","AudioContext","webkitAudioContext","context","Exception","type","message","stack","toString","Downloader","audibly","completeCB","count","complete","i","request","XMLHttpRequest","open","url","e","responseType","onload","decodeAudioData","response","success","error","onerror","send","buffer","node","destination","connect","time","start","stop","createBufferSource","playbackRate","minValue","maxValue","value","loop","TYPE_VALUES","createOscillator","frequency","detune","indexOf","join","createBiquadFilter","Q","gain","createConvolver","normalize"],"mappings":"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","file":"audibly.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2a3ddc30c74cd4f8a3a5","/**\n * audibly.js\n * @author Craig Harvie <craig@craigharvie.me>\n */\n\n\nimport AudiblyContext from 'API/Audibly/AudiblyContext';\nimport Downloader from 'API/Downloader';\nimport AudiblyNode from 'API/Audibly/Node/AudiblyNode';\nimport AudiblyAudioBufferSourceNode from 'API/Audibly/Node/Source/AudiblyAudioBufferSourceNode';\nimport AudiblyOscillatorNode from 'API/Audibly/Node/Source/AudiblyOscillatorNode';\nimport AudiblyBiquadFilterNode from 'API/Audibly/Node/Filter/AudiblyBiquadFilterNode';\nimport AudiblyConvolverNode from 'API/Audibly/Node/Filter/AudiblyConvolverNode';\n\nwindow.AudiblyContext = new AudiblyContext();\nwindow.AudiblyNode = AudiblyNode;\nwindow.AudiblyAudioBufferSourceNode = AudiblyAudioBufferSourceNode;\nwindow.AudiblyOscillatorNode = AudiblyOscillatorNode;\nwindow.AudiblyBiquadFilterNode = AudiblyBiquadFilterNode;\nwindow.AudiblyConvolverNode = AudiblyConvolverNode;\nwindow.Audibly = class Audibly {\n\n\n\t/**\n   * Create a audibly instance.\n   * @param {array} audio - array of audio objects ({id: 1, url: 'http://audio.com/2.wav'}).\n   */\n\tconstructor( options={} ) {\n\n\n\t\t// Setup variables\n\t\tthis.options = options;\n\t\tthis.buffers = {};\n\n\n\t\t// Process options\n\t\tthis.options = Object.assign( {\n\t\t\taudio: [],\n\t\t\tcallback: () => {}\n\t\t}, options );\n\n\n\t\t// Download any audio we have\n\t\tif ( this.options.audio.length ) {\n\t\t\tnew Downloader( this, this.options.callback.bind( this ) );\n\t\t}\n\n\n\t\treturn this;\n\t}\n\n\n\t/**\n   * Gets a source node\n   * @param {string} id\n   */\n\tgetBufferNode( id ) {\n\t\treturn this.buffers[ id ];\n\t}\n\n\n};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/audibly.js","/**\n * Class representing an AudiblyContext\n * Wrapper for AudioContext - https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\n * @author Craig Harvie <craig@craigharvie.me>\n *\n * @description\n * The AudioContext interface represents an audio-processing graph built\n * from audio modules linked together, each represented by an AudioNode.\n * An audio context controls the creation of the nodes it contains and the\n * execution of the audio processing, or decoding.\n * You need to create an AudioContext before you do anything else,\n * as everything happens inside a context.\n */\n\nimport Exception from '../Exception';\n\nexport default class AudiblyContext {\n\n\n\t/**\n   * Create an AudiblyContext.\n   */\n\tconstructor() {\n\n\t\t// Create AudioContext\n\t\tlet AudioContext = window.AudioContext || window.webkitAudioContext;\n\t\tif ( AudioContext ) {\n\t\t\tthis.context = new AudioContext();\n\t\t} else {\n\t\t\tthrow new Exception( 'AudiblyContextException', 'Unable to create Web Audio API AudioContext. This may be down to an out of date browser.' );\n\t\t}\n\n\t\treturn this.context;\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/API/Audibly/AudiblyContext.js","/**\n * Class representing an Exception\n * @author Craig Harvie <craig@craigharvie.me>\n */\nexport default class Exception {\n\n\n\t/**\n   * Create an Exception.\n   */\n\tconstructor( type, message, stack ) {\n\t\tthis.type = type;\n\t\tthis.message = message;\n\t\tif ( stack ) {\n\t\t\tthis.stack = stack;\n\t\t}\n\t\tthis.toString = function() {\n\t\t\treturn `${this.type}: ${this.message}`;\n\t\t};\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/API/Exception.js","/**\n * Class representing a Downloader\n * Download raw audio files\n * @author Craig Harvie <craig@craigharvie.me>\n */\n\nimport Exception from 'API/Exception';\n\nexport default class Downloader {\n\n\n\t/**\n   * Create a Downloader.\n   */\n\tconstructor( audibly, completeCB ) {\n\n\t\tthis.audibly = audibly;\n\t\t// Keep track of how many we have downloaded\n\t\tthis.count = 0;\n\t\tthis.complete = completeCB;\n\n\t\t// Loop through and download audio\n\t\tfor ( let i=0; i<this.audibly.options.audio.length; i++ ) {\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\ttry {\n\t\t\t\trequest.open( 'GET', this.audibly.options.audio[ i ].url, true );\n\t\t\t} catch ( e ) {\n\t\t\t\tthrow new Exception( 'AudiblyException', 'Please ensure you have provided a url for your audio' );\n\t\t\t}\n\n\t\t\t// We want raw data\n\t\t\trequest.responseType = 'arraybuffer';\n\n\t\t\trequest.onload = () => {\n\t\t\t\t// Asynchronously decode the audio file data in request.response\n\t\t\t\twindow.AudiblyContext.decodeAudioData( request.response, this.success.bind( this, this.audibly.options.audio[ i ].id ), this.error );\n\t\t\t};\n\n\t\t\trequest.onerror = () => {\n\t\t\t\tthrow new Exception( 'AudiblyException', 'Please ensure you have provided a url for your audio' );\n\t\t\t};\n\n\t\t\trequest.send();\n\n\t\t}\n\t}\n\n\n\t/**\n   * Download of audio was successfull\n   */\n\tsuccess( id, buffer ) {\n\t\tthis.audibly.buffers[ id ] = buffer;\n\t\t// this.audibly.sources[ id ] = new AudiblyAudioBufferSourceNode( {\n\t\t// \tbuffer: buffer\n\t\t// } );\n\t\tif ( ++this.count === this.audibly.options.audio.length ) {\n\t\t\tthis.complete();\n\t\t}\n\t}\n\n\n\t/**\n   * Download of audio errored\n   */\n\terror() {\n\t\tthrow new Exception( 'AudiblyException', 'Download of audio errored. Please check your audio configuration' );\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/API/Downloader.js","/**\n * Class representing an AudiblyNode\n * Wrapper for AudioNode - https://developer.mozilla.org/en-US/docs/Web/API/AudioNode\n * @author Craig Harvie <craig@craigharvie.me>\n *\n * @description\n * The AudioNode interface represents an audio-processing module like an\n * audio source (e.g. an HTML <audio> or <video> element), audio destination,\n * intermediate processing module (e.g. a filter like BiquadFilterNode,\n * or volume control like GainNode).\n */\n\nimport Exception from '../../Exception';\n\nexport default class AudiblyNode {\n\n\n\t/**\n   * Create an AudiblyNode instance.\n   * @param {object} options\n   */\n\tconstructor( options, node ) {\n\t\tthis.options = options;\n\t\tthis.node = node;\n\t\treturn this;\n\t}\n\n\n\t/**\n   * Connects to supplied destination node\n   * @param {object} options\n   */\n\tconnect( destination=window.AudiblyContext.destination ) {\n\t\ttry {\n\t\t\tif ( destination.node ) {\n\t\t\t\tthis.node.connect( destination.node );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.node.connect( destination );\n\t\t} catch ( e ) {\n\t\t\tthrow new Exception( 'AudiblyNodeException', 'Unable to connect this node to destination. Please recreate the node and try again.', e );\n\t\t}\n\t}\n\n\n\t/**\n   * Start playing node\n   * @param {number} time to start playing\n   */\n\tstart( time=0 ) {\n\t\ttry {\n\t\t\tthis.node.start( time );\n\t\t} catch ( e ) {\n\t\t\tthrow new Exception( 'AudiblyNodeException', 'start() can only be called on AudiblyNode instances exactly one time. You must recreate this node when playback is required again.' );\n\t\t}\n\t}\n\n\n\t/**\n   * Stop playing node\n   */\n\tstop() {\n\t\ttry {\n\t\t\tthis.node.stop();\n\t\t} catch ( e ) {\n\t\t\tthrow new Exception( 'AudiblyNodeException', 'stop() can not be called on AudiblyNode instances without first calling start().' );\n\t\t}\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/API/Audibly/Node/AudiblyNode.js","/**\n * Class representing an AudiblyAudioBufferSourceNode\n * Wrapper for AudioBufferSourceNode - https://developer.mozilla.org/en-US/docs/Web/API/AudioBufferSourceNode\n * @author Craig Harvie <craig@craigharvie.me>\n *\n * @description\n * The AudioBufferSourceNode interface represents an audio source\n * consisting of in-memory audio data, stored in an AudioBuffer.\n * It is an AudioNode that acts as an audio source.\n */\n\nimport AudiblyNode from '../AudiblyNode';\nimport Exception from '../../../Exception';\n\nexport default class AudiblyAudioBufferSourceNode extends AudiblyNode {\n\n\n\t/**\n   * Create an AudiblyAudioBufferSourceNode instance.\n   * @param {object} options\n   */\n\tconstructor( options={} ) {\n\n\t\t// Buffer source node\n\t\tlet node = window.AudiblyContext.createBufferSource();\n\n\t\t// Check options\n\t\tif ( options.playbackRate ) {\n\t\t\tif ( options.playbackRate < node.playbackRate.minValue || options.playbackRate > node.playbackRate.maxValue ) {\n\t\t\t\tthrow new Exception( 'AudiblyAudioBufferSourceNode', `Invalid 'playbackRate' option passed in. This value must be between ${node.playbackRate.minValue} and ${node.playbackRate.maxValue}.` );\n\t\t\t}\n\t\t\tnode.playbackRate.value = options.playbackRate;\n\t\t}\n\n\t\tif ( options.buffer ) {\n\t\t\tnode.buffer = options.buffer;\n\t\t}\n\n\t\tif ( options.loop ) {\n\t\t\tnode.loop = options.loop;\n\t\t}\n\n\t\tsuper( options, node );\n\n\t\treturn this;\n\t}\n\n\n\t/**\n   * Updates the playback rate of the node\n   * @param {number} value - range from 0 - 5\n   */\n\tsetPlaybackRate( value=1 ) {\n\n\t\tif ( value < this.node.playbackRate.minValue || value > this.node.playbackRate.maxValue ) {\n\t\t\tthrow new Exception( 'AudiblyAudioBufferSourceNode', `Invalid 'playbackRate' option passed in. This value must be between ${this.node.playbackRate.minValue} and ${this.node.playbackRate.maxValue}.` );\n\t\t}\n\n\t\tthis.node.playbackRate.value = value;\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/API/Audibly/Node/Source/AudiblyAudioBufferSourceNode.js","/**\n * Class representing an AudiblyOscillatorNode\n * Wrapper for OscillatorNode - https://developer.mozilla.org/en-US/docs/Web/API/OscillatorNode\n * @author Craig Harvie <craig@craigharvie.me>\n *\n * @description\n * The OscillatorNode interface represents a periodic waveform, such\n * as a sine or triangle wave. It is an AudioNode audio-processing\n * module that causes a given frequency of wave to be created.\n */\n\nimport AudiblyNode from '../AudiblyNode';\nimport Exception from '../../../Exception';\n\n// Accepted options\nconst TYPE_VALUES = [ 'sine', 'square', 'sawtooth', 'triangle' ];\n\nexport default class AudiblyOscillatorNode extends AudiblyNode {\n\n\n\t/**\n   * Create an AudiblyAudioBufferSourceNode instance.\n   * @param {object} options\n   */\n\tconstructor( options={} ) {\n\n\t\t// Oscillator node\n\t\tlet node = window.AudiblyContext.createOscillator();\n\n\t\t// Check options\n\t\tif ( options.frequency ) {\n\t\t\tif ( options.frequency < node.frequency.minValue || options.frequency > node.frequency.maxValue ) {\n\t\t\t\tthrow new Exception( 'AudiblyOscillatorNode', `Invalid 'frequency' option passed in. This value must be between ${node.frequency.minValue} and ${node.frequency.maxValue}.` );\n\t\t\t}\n\t\t\tnode.frequency.value = options.frequency;\n\t\t}\n\n\t\tif ( options.detune ) {\n\t\t\tif ( options.detune < node.detune.minValue || options.detune > node.detune.maxValue ) {\n\t\t\t\tthrow new Exception( 'AudiblyOscillatorNode', `Invalid 'detune' option passed in. This value must be between ${node.detune.minValue} and ${node.detune.maxValue}.` );\n\t\t\t}\n\t\t\tnode.detune.value = options.detune;\n\t\t}\n\n\t\tif ( options.type ) {\n\t\t\tif ( TYPE_VALUES.indexOf( options.type ) === -1 ) {\n\t\t\t\tthrow new Exception( 'AudiblyOscillatorNode', `Invalid 'type' option passed in. Accepted values are ${TYPE_VALUES.join( ', ' )}.` );\n\t\t\t}\n\t\t\tnode.type = options.type;\n\t\t}\n\n\t\tsuper( options, node );\n\n\t\treturn this;\n\t}\n\n\n\t/**\n   * Updates the type of the node\n   * @param {string} type - range from 'sine', 'square', 'sawtooth', 'triangle'\n   */\n\tsetType( type='sine' ) {\n\t\tif ( TYPE_VALUES.indexOf( type ) === -1 ) {\n\t\t\tthrow new Exception( 'AudiblyOscillatorNode', `Invalid 'type' option passed in. Accepted values are ${TYPE_VALUES.join( ', ' )}.` );\n\t\t}\n\t\tthis.node.type = type;\n\t}\n\n\n\t/**\n   * Updates the frequency of the node\n   * @param {number} value - range from 0 to 6000\n   */\n\tsetFrequency( value=440 ) {\n\t\tif ( value < this.node.frequency.minValue || value > this.node.frequency.maxValue ) {\n\t\t\tthrow new Exception( 'AudiblyOscillatorNode', `Invalid 'frequency' option passed in. This value must be between ${this.node.frequency.minValue} and ${this.node.frequency.maxValue}.` );\n\t\t}\n\t\tthis.node.frequency.value = value;\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/API/Audibly/Node/Source/AudiblyOscillatorNode.js","/**\n * Class representing an AudiblyBiquadFilterNode\n * Wrapper for BiquadFilterNode - https://developer.mozilla.org/en-US/docs/Web/API/BiquadFilterNode\n * @author Craig Harvie <craig@craigharvie.me>\n *\n * @description\n * The BiquadFilterNode interface represents a simple low-order filter.\n * It is an AudioNode that can represent different kinds of filters, tone\n * control devices, or graphic equalizers. A BiquadFilterNode always has\n * exactly one input and one output.\n */\n\nimport AudiblyNode from '../AudiblyNode';\nimport Exception from '../../../Exception';\n\n// Accepted options\nconst TYPE_VALUES = [ 'lowpass', 'highpass', 'bandpass', 'lowshelf', 'highshelf', 'peaking', 'notch', 'allpass' ];\n\nexport default class AudiblyBiquadFilterNode extends AudiblyNode {\n\n\n\t/**\n   * Create an AudiblyBiquadFilterNode instance.\n   * @param {object} options\n   */\n\tconstructor( options={} ) {\n\n\t\t// BiquadFilter node\n\t\tlet node = window.AudiblyContext.createBiquadFilter();\n\n\t\t// Check options\n\t\tif ( options.frequency ) {\n\t\t\tif ( options.frequency < node.frequency.minValue || options.frequency > node.frequency.maxValue ) {\n\t\t\t\tthrow new Exception( 'AudiblyBiquadFilterNode', `Invalid 'frequency' option passed in. This value must be between ${node.frequency.minValue} and ${node.frequency.maxValue}.` );\n\t\t\t}\n\t\t\tnode.frequency.value = options.frequency;\n\t\t}\n\n\t\tif ( options.detune ) {\n\t\t\tif ( options.detune < node.detune.minValue || options.detune > node.detune.maxValue ) {\n\t\t\t\tthrow new Exception( 'AudiblyBiquadFilterNode', `Invalid 'detune' option passed in. This value must be between ${node.detune.minValue} and ${node.detune.maxValue}.` );\n\t\t\t}\n\t\t\tnode.detune.value = options.detune;\n\t\t}\n\n\t\tif ( options.type ) {\n\t\t\tif ( TYPE_VALUES.indexOf( options.type ) === -1 ) {\n\t\t\t\tthrow new Exception( 'AudiblyBiquadFilterNode', `Invalid 'type' option passed in. Accepted values are ${TYPE_VALUES.join( ', ' )}.` );\n\t\t\t}\n\t\t\tnode.type = options.type;\n\t\t}\n\n\t\tif ( options.Q ) {\n\t\t\tif ( options.Q < node.Q.minValue || options.Q > node.Q.maxValue ) {\n\t\t\t\tthrow new Exception( 'AudiblyBiquadFilterNode', `Invalid 'Q' option passed in. This value must be between ${node.Q.minValue} and ${node.Q.maxValue}.` );\n\t\t\t}\n\t\t\tnode.Q.value = options.Q;\n\t\t}\n\n\t\tif ( options.gain ) {\n\t\t\tif ( options.gain < node.gain.minValue || options.gain > node.gain.maxValue ) {\n\t\t\t\tthrow new Exception( 'AudiblyBiquadFilterNode', `Invalid 'gain' option passed in. This value must be between ${node.gain.minValue} and ${node.gain.maxValue}.` );\n\t\t\t}\n\t\t\tnode.gain.value = options.gain;\n\t\t}\n\n\t\tsuper( options, node );\n\n\t\treturn this;\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/API/Audibly/Node/Filter/AudiblyBiquadFilterNode.js","/**\n * Class representing an AudiblyConvolverNode\n * Wrapper for ConvolverNode - https://developer.mozilla.org/en-US/docs/Web/API/ConvolverNode\n * @author Craig Harvie <craig@craigharvie.me>\n *\n * @description\n * The ConvolverNode interface is an AudioNode that performs a Linear \n * Convolution on a given AudioBuffer, often used to achieve a reverb effect. \n * A ConvolverNode always has exactly one input and one output.\n */\n\nimport AudiblyNode from '../AudiblyNode';\nimport Exception from '../../../Exception';\n\nexport default class AudiblyConvolverNode extends AudiblyNode {\n\n\n\t/**\n   * Create an AudiblyConvolverNode instance.\n   * @param {object} options\n   */\n\tconstructor( options={} ) {\n\n\t\t// Convolver node\n\t\tlet node = window.AudiblyContext.createConvolver();\n\n\t\t// Check options\n\t\tif ( options.buffer ) {\n\t\t\ttry {\n\t\t\t\tnode.buffer = options.buffer;\n\t\t\t} catch ( e ) {\n\t\t\t\tthrow new Exception( 'AudiblyConvolverNode', `Invalid 'buffer' option passed in.`, e );\n\t\t\t}\n\t\t}\n\n\t\tif ( options.normalize ) {\n\t\t\tnode.normalize = options.normalize;\n\t\t}\n\n\t\tsuper( options, node );\n\n\t\treturn this;\n\t}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/API/Audibly/Node/Filter/AudiblyConvolverNode.js"],"sourceRoot":""}